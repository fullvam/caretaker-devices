=begin

This file is part of the CoYoHo Control Your Home System.

Copyright 2011-2012 Dirk Grappendorf, www.grappendorf.net

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

$: << 'app'
$: << 'config'
$: << 'lib'

require 'rubygems'
require 'bundler/setup'
require 'rake'
require 'rake/clean'
require 'yaml'
require 'logger'
require 'util/string_helpers'

def load_yaml file_name
	yaml = File.read file_name
	yaml = yaml.gsub(/(?:<%=)(.+?)(?:%>)/) {eval($1)}
	YAML::load(yaml)
end

CLOBBER.include 'build/*'

task :environment do
	environment_name = ENV['environment'] || ENV['COYOHO_ENV'] || 'development'

	$CONFIG = {}
	config_yml = File.dirname(File.expand_path(__FILE__)) + "/config/environments/#{environment_name}.yml"
	begin
		$CONFIG = load_yaml config_yml
	rescue Exception => x
		puts "Unable to load configuration file '#{config_yml}' : #{x.message}"
	end

	require 'util/assert_helpers'
	require 'data_mapper'
	dbconfig = load_yaml 'config/database.yml'
	DataMapper::Logger.new $stdout, :debug
	DataMapper.setup :default, dbconfig[environment_name]
end

desc 'Create the widgetset.gwt.xml file and compile the widgetset'
task :widgetset do
	require 'rubydin_widgetset'
	require 'rubydin_addons'
	Rubydin::Widgetset.create
	Rubydin::Widgetset.compile
end

desc 'Create a web application package'
task :package do
	FileUtils.mkdir_p 'build/webapp'
	[
		'app', 'config',
		'public/META-INF', 'public/WEB-INF', 'public/VAADIN',
		'build/VAADIN',	'Gemfile', 'Gemfile.lock'
	].each do |src|
		FileUtils.cp_r src, 'build/webapp'
	end
	system 'cd build/webapp; zip -r ../coyoho.war *; cd ..'
end

desc 'Deploy the web application'
task :deploy => :package do
	jetty_home = ENV['JETTY_HOME']
	if not jetty_home
		raise 'No JETTY_HOME defined. Please install Jetty'
	end
	webapp_path = File.expand_path 'webapps/coyoho', jetty_home
	FileUtils.cp_r 'build/webapp', webapp_path
end

desc 'Database migration (optional migrate=<optional_migration_path>)'
task :migrate => :environment do
	require 'dm-migrations/migration_runner'
	require 'db/migrate/migration_helper'
	require 'models'
	DataMapper.auto_migrate!
	Dir['db/migrate/*.rb'].each do |migration|
		load migration
	end
	additional_migration = ENV['migrate']
	if additional_migration
		additional_migration_path = File.expand_path 'db/migrate', additional_migration
		if File.directory? additional_migration_path
			Dir[additional_migration_path + '/*.rb'].each do |migration|
				load migration
			end
		end
	end
	migrate_up!
end

desc 'Create a new database (deletes an old one!)'
task :createdb do
	FileUtils.rm_f File.expand_path 'coyoho.db', ENV['HOME']
	Rake::Task['migrate'].invoke
end

desc 'Create a new migration file in db/migrate. Call with name=migration_name'
task :createmigration do
	name = ENV['name']
	stamp = Time.now.strftime '%Y%m%d%H%M%S'
	filename = File.expand_path "db/migrate/#{stamp}_#{name}.rb"
	content = <<-EOS
	migration #{stamp}, :#{name} do

		up do
		end

		down do
		end

	end
	EOS
	File.open(filename, 'w') {|f| f.write content.gsub(/^\t/, '')}
end

desc 'Start the CoYoHo server'
task :start do
	load 'boot.rb'
end

desc 'Run cucumber features'
task :cucumber do
	require 'cucumber/rake/task'
	Cucumber::Rake::Task.new(:cucumber) do |task|
		task.cucumber_opts = ['features', '--format progress', '--color']
		p task.methods.sort
	end
end

desc 'Run rspec tests'
task :spec do
	require 'rspec/core/rake_task'
	RSpec::Core::RakeTask.new(:spec) do |task|
		task.rspec_opts = '-I app -I config -r spec/spec_helper.rb --color'
		task.verbose = false
	end
end
